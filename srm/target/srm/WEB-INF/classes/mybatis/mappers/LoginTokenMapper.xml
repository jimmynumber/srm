<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.want.srm.dao.LoginTokenDao">
  <resultMap id="BaseResultMap" type="com.want.srm.entity.LoginToken">
    <id column="ACCOUNT_ID" jdbcType="VARCHAR" property="accountId" />
    <result column="TOKEN" jdbcType="VARCHAR" property="token" />
    <result column="LOGIN_STATE" jdbcType="INTEGER" property="loginState" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="DEADLINE" jdbcType="TIMESTAMP" property="deadline" />
    <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    ACCOUNT_ID, TOKEN, LOGIN_STATE, CREATE_DATE, DEADLINE, UPDATE_DATE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from LOGIN_TOKEN
    where ACCOUNT_ID = #{accountId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from LOGIN_TOKEN
    where ACCOUNT_ID = #{accountId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.want.srm.entity.LoginToken">
    insert into LOGIN_TOKEN (ACCOUNT_ID, TOKEN, LOGIN_STATE, 
      CREATE_DATE, DEADLINE, UPDATE_DATE
      )
    values (#{accountId,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{loginState,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{deadline,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.want.srm.entity.LoginToken">
    insert into LOGIN_TOKEN
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        ACCOUNT_ID,
      </if>
      <if test="token != null">
        TOKEN,
      </if>
      <if test="loginState != null">
        LOGIN_STATE,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="deadline != null">
        DEADLINE,
      </if>
      <if test="updateDate != null">
        UPDATE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="loginState != null">
        #{loginState,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.want.srm.entity.LoginToken">
    update LOGIN_TOKEN
    <set>
      <if test="token != null">
        TOKEN = #{token,jdbcType=VARCHAR},
      </if>
      <if test="loginState != null">
        LOGIN_STATE = #{loginState,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=DATE},
      </if>
      <if test="deadline != null">
        DEADLINE = #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ACCOUNT_ID = #{accountId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.want.srm.entity.LoginToken">
    update LOGIN_TOKEN
    set TOKEN = #{token,jdbcType=VARCHAR},
      LOGIN_STATE = #{loginState,jdbcType=INTEGER},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      DEADLINE = #{deadline,jdbcType=DATE},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}
    where ACCOUNT_ID = #{accountId,jdbcType=VARCHAR}
  </update>
</mapper>