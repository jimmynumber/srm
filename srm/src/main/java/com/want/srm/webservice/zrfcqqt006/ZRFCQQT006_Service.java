
package com.want.srm.webservice.zrfcqqt006;

import java.net.Authenticator;
import java.net.MalformedURLException;
import java.net.PasswordAuthentication;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ZRFCQQT006", targetNamespace = "http://www.example.org/ZRFCQQT006/", wsdlLocation = "http://ace-dev.want-want.com:7800/ESB/WS/ZRFCQQT006/wsdl?dev")
@Component
public class ZRFCQQT006_Service
    extends Service
{
	
    private final static QName ZRFCQQT006_QNAME = new QName("http://www.example.org/ZRFCQQT006/", "ZRFCQQT006");

    private static URL getWsdlLocation(String webserviceUrl, String account, String password) {
        Authenticator.setDefault(new Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(account, password.toCharArray());
            }
        });
        URL url = null;
        try {
            url = new URL(webserviceUrl);
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
        return url;
    }

    @Autowired
    public ZRFCQQT006_Service(@Value("${zrfcqqt006.URL}") final String webserviceUrl, @Value("${zrfcqqt.username}") final String account, @Value("${zrfcqqt.password}") final String password) {
        super(getWsdlLocation(webserviceUrl, account, password), ZRFCQQT006_QNAME);
    }

    public ZRFCQQT006_Service(String webserviceUrl, String account, String password,WebServiceFeature... features) {
        super(getWsdlLocation(webserviceUrl, account, password), ZRFCQQT006_QNAME, features);
    }

    public ZRFCQQT006_Service(URL wsdlLocation) {
        super(wsdlLocation, ZRFCQQT006_QNAME);
    }

    public ZRFCQQT006_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ZRFCQQT006_QNAME, features);
    }

    public ZRFCQQT006_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ZRFCQQT006_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ZRFCQQT006
     */
    @WebEndpoint(name = "ZRFCQQT006SOAP")
    public ZRFCQQT006 getZRFCQQT006SOAP() {
        return super.getPort(new QName("http://www.example.org/ZRFCQQT006/", "ZRFCQQT006SOAP"), ZRFCQQT006.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ZRFCQQT006
     */
    @WebEndpoint(name = "ZRFCQQT006SOAP")
    public ZRFCQQT006 getZRFCQQT006SOAP(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.example.org/ZRFCQQT006/", "ZRFCQQT006SOAP"), ZRFCQQT006.class, features);
    }

}
